[{"/home/home/Workspace/msn-js/frontend/src/index.js":"1","/home/home/Workspace/msn-js/frontend/src/App.js":"2","/home/home/Workspace/msn-js/frontend/src/pages/context/allusers.js":"3","/home/home/Workspace/msn-js/frontend/src/styles.js":"4","/home/home/Workspace/msn-js/frontend/src/styles/global.js":"5","/home/home/Workspace/msn-js/frontend/src/pages/multiChats/index.js":"6","/home/home/Workspace/msn-js/frontend/src/scripts/ref.js":"7","/home/home/Workspace/msn-js/frontend/src/pages/chat/index.js":"8","/home/home/Workspace/msn-js/frontend/src/pages/home/index.js":"9","/home/home/Workspace/msn-js/frontend/src/configs/socket_export.js":"10","/home/home/Workspace/msn-js/frontend/src/pages/login/index.js":"11","/home/home/Workspace/msn-js/frontend/src/pages/components/notificationOnline/index.js":"12","/home/home/Workspace/msn-js/frontend/src/pages/multiChats/styles.js":"13","/home/home/Workspace/msn-js/frontend/src/pages/chat/styles.js":"14","/home/home/Workspace/msn-js/frontend/src/configs/config_connections.js":"15","/home/home/Workspace/msn-js/frontend/src/pages/home/styles.js":"16","/home/home/Workspace/msn-js/frontend/src/pages/login/styles.js":"17","/home/home/Workspace/msn-js/frontend/src/scripts/sounds/sounds.js":"18","/home/home/Workspace/msn-js/frontend/src/pages/components/notificationOnline/styles.js":"19","/home/home/Workspace/msn-js/frontend/src/pages/chat/scripts/draggable.js":"20","/home/home/Workspace/msn-js/frontend/src/pages/components/navbar/index.js":"21","/home/home/Workspace/msn-js/frontend/src/pages/components/modalBorder/index.js":"22","/home/home/Workspace/msn-js/frontend/src/pages/home/components/header/index.js":"23","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/index.js":"24","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/header/index.js":"25","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chatText/index.js":"26","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/persons/index.js":"27","/home/home/Workspace/msn-js/frontend/src/pages/components/modalBorder/verifyAvatarDefault.js":"28","/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/index.js":"29","/home/home/Workspace/msn-js/frontend/src/pages/home/components/sidebar/index.js":"30","/home/home/Workspace/msn-js/frontend/src/pages/home/components/contacts/index.js":"31","/home/home/Workspace/msn-js/frontend/src/pages/components/navbar/styles.js":"32","/home/home/Workspace/msn-js/frontend/src/pages/components/modalBorder/styles.js":"33","/home/home/Workspace/msn-js/frontend/src/pages/home/components/header/styles.js":"34","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/styles.js":"35","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/persons/styles.js":"36","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chatText/styles.js":"37","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/header/styles.js":"38","/home/home/Workspace/msn-js/frontend/src/pages/components/aeroButton/index.js":"39","/home/home/Workspace/msn-js/frontend/src/pages/components/audioRecorder/index.js":"40","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/identifyEmoticonChat/index.js":"41","/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/components/crop/index.js":"42","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendWinks/components/winks/index.js":"43","/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/styles.js":"44","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendWinks/index.js":"45","/home/home/Workspace/msn-js/frontend/src/pages/home/components/sidebar/styles.js":"46","/home/home/Workspace/msn-js/frontend/src/pages/home/components/contacts/styles.js":"47","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendEmoticons/index.js":"48","/home/home/Workspace/msn-js/frontend/src/pages/home/components/contacts/components/contact/index.js":"49","/home/home/Workspace/msn-js/frontend/src/pages/components/aeroButton/styles.js":"50","/home/home/Workspace/msn-js/frontend/src/pages/components/audioRecorder/styles.js":"51","/home/home/Workspace/msn-js/frontend/src/pages/components/audioRecorder/useRecorder.js":"52","/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/components/crop/styles.js":"53","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendWinks/components/winks/styles.js":"54","/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/components/photoHistory/index.js":"55","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendWinks/styles.js":"56","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendEmoticons/styles.js":"57","/home/home/Workspace/msn-js/frontend/src/pages/home/components/contacts/components/contact/styles.js":"58","/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/components/photoHistory/styles.js":"59"},{"size":312,"mtime":1755094167221,"results":"60","hashOfConfig":"61"},{"size":2704,"mtime":1755094167220,"results":"62","hashOfConfig":"61"},{"size":3461,"mtime":1755094167331,"results":"63","hashOfConfig":"61"},{"size":297,"mtime":1755094167339,"results":"64","hashOfConfig":"61"},{"size":253,"mtime":1755094167339,"results":"65","hashOfConfig":"61"},{"size":2212,"mtime":1755094167338,"results":"66","hashOfConfig":"61"},{"size":9415,"mtime":1755094167338,"results":"67","hashOfConfig":"61"},{"size":3234,"mtime":1755094167322,"results":"68","hashOfConfig":"61"},{"size":1189,"mtime":1755094167335,"results":"69","hashOfConfig":"61"},{"size":577,"mtime":1755094167221,"results":"70","hashOfConfig":"61"},{"size":9078,"mtime":1755095639816,"results":"71","hashOfConfig":"61"},{"size":4416,"mtime":1755094167330,"results":"72","hashOfConfig":"61"},{"size":761,"mtime":1755094167338,"results":"73","hashOfConfig":"61"},{"size":3150,"mtime":1755094167322,"results":"74","hashOfConfig":"61"},{"size":191,"mtime":1755104769453,"results":"75","hashOfConfig":"61"},{"size":485,"mtime":1755094167335,"results":"76","hashOfConfig":"61"},{"size":3838,"mtime":1755094167338,"results":"77","hashOfConfig":"61"},{"size":459,"mtime":1755094167339,"results":"78","hashOfConfig":"61"},{"size":1983,"mtime":1755094167331,"results":"79","hashOfConfig":"61"},{"size":2350,"mtime":1755094167322,"results":"80","hashOfConfig":"61"},{"size":367,"mtime":1755094167330,"results":"81","hashOfConfig":"61"},{"size":1427,"mtime":1755094167328,"results":"82","hashOfConfig":"61"},{"size":7859,"mtime":1755104776652,"results":"83","hashOfConfig":"61"},{"size":4753,"mtime":1755094167319,"results":"84","hashOfConfig":"61"},{"size":3316,"mtime":1755094167321,"results":"85","hashOfConfig":"61"},{"size":1258,"mtime":1755094167320,"results":"86","hashOfConfig":"61"},{"size":1118,"mtime":1755094167322,"results":"87","hashOfConfig":"61"},{"size":4835,"mtime":1755094167329,"results":"88","hashOfConfig":"61"},{"size":1343,"mtime":1755094167330,"results":"89","hashOfConfig":"61"},{"size":1202,"mtime":1755094167335,"results":"90","hashOfConfig":"61"},{"size":2452,"mtime":1755094167332,"results":"91","hashOfConfig":"61"},{"size":175,"mtime":1755094167330,"results":"92","hashOfConfig":"61"},{"size":908,"mtime":1755094167328,"results":"93","hashOfConfig":"61"},{"size":7118,"mtime":1755150724301,"results":"94","hashOfConfig":"61"},{"size":2145,"mtime":1755094167319,"results":"95","hashOfConfig":"61"},{"size":1185,"mtime":1755094167322,"results":"96","hashOfConfig":"61"},{"size":812,"mtime":1755094167320,"results":"97","hashOfConfig":"61"},{"size":953,"mtime":1755094167321,"results":"98","hashOfConfig":"61"},{"size":428,"mtime":1755094167322,"results":"99","hashOfConfig":"61"},{"size":1805,"mtime":1755094167322,"results":"100","hashOfConfig":"61"},{"size":4541,"mtime":1755094167223,"results":"101","hashOfConfig":"61"},{"size":6131,"mtime":1755094167329,"results":"102","hashOfConfig":"61"},{"size":2445,"mtime":1755094167229,"results":"103","hashOfConfig":"61"},{"size":1029,"mtime":1755094167330,"results":"104","hashOfConfig":"61"},{"size":883,"mtime":1755094167319,"results":"105","hashOfConfig":"61"},{"size":1060,"mtime":1755094167335,"results":"106","hashOfConfig":"61"},{"size":1592,"mtime":1755094167332,"results":"107","hashOfConfig":"61"},{"size":1119,"mtime":1755094167228,"results":"108","hashOfConfig":"61"},{"size":2554,"mtime":1755094167332,"results":"109","hashOfConfig":"61"},{"size":697,"mtime":1755094167322,"results":"110","hashOfConfig":"61"},{"size":393,"mtime":1755094167322,"results":"111","hashOfConfig":"61"},{"size":1968,"mtime":1755094167322,"results":"112","hashOfConfig":"61"},{"size":2404,"mtime":1755094167329,"results":"113","hashOfConfig":"61"},{"size":1010,"mtime":1755094167229,"results":"114","hashOfConfig":"61"},{"size":3668,"mtime":1755094167330,"results":"115","hashOfConfig":"61"},{"size":1036,"mtime":1755094167319,"results":"116","hashOfConfig":"61"},{"size":931,"mtime":1755094167228,"results":"117","hashOfConfig":"61"},{"size":700,"mtime":1755094167332,"results":"118","hashOfConfig":"61"},{"size":2646,"mtime":1755094167330,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1a4sh9u",{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"122"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"122"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},"/home/home/Workspace/msn-js/frontend/src/index.js",[],["260","261"],"/home/home/Workspace/msn-js/frontend/src/App.js",["262"],"import React, { useEffect } from \"react\";\n//components\nimport MultiChats from \"../src/pages/multiChats/index\";\nimport Scripts from \"./scripts/ref\";\n\n//configs\nimport { socket } from \"./configs/socket_export\";\nimport Chat from \"./pages/chat/index\";\nimport { NotificationOnline } from \"./pages/components/notificationOnline/index\";\n//context\nimport { useUser } from \"./pages/context/allusers\";\n//pages\nimport Home from \"./pages/home/index\";\nimport Login from \"./pages/login/index\";\n//refs\nimport { Container } from \"./styles\";\nimport GlobalStyle from \"./styles/global\";\n\nfunction App() {\n    const { userChats, mode, chatRefText, chatRef, multiChatRef } = useUser();\n    let [drawAttention, sendMessage, sendAudio, SendWink] = Scripts();\n\n    useEffect(() => {\n        socket.on(\"send client message text\", ({ message, socketidUser, socketidPerson, chatopen, usernamesend }) => {\n            sendMessage({ chatRefText, chatRef, multiChatRef, message, socketidUser, socketidPerson, chatopen, usernamesend });\n        });\n\n        socket.on(\"Draw AttenAttention\", ({ id, whosend, isend, statusperson }) => {\n            //drawAttention({ chatRefText, chatRef, multiChatRef, id, whosend, isend, statusperson });\n            drawAttention({ chatRefText, chatRef, multiChatRef, id, whosend, isend, statusperson });\n        });\n\n        socket.on(\"send audio\", ({ audioURL, socketidPerson, socketidUser }) => {\n            sendAudio({ audioURL, socketidPerson, socketidUser, chatRefText, chatRef, multiChatRef });\n        });\n\n        socket.on(\"send wink\", ({ wink, socketidPerson, socketidUser, usernamesend }) => {\n            SendWink({ wink, socketidPerson, socketidUser, chatRefText, chatRef, multiChatRef, usernamesend });\n        });\n    }, []);\n\n    return (\n        <Container>\n            <NotificationOnline />\n\n            {mode === \"login\" ? (\n                <Login />\n            ) : (\n                <>\n                    <Home />\n\n                    {userChats && userChats.map((elem, index) => <Chat key={elem.socketidperson} chatRefText={chatRefText} ref={{ chatRefText: (el) => (chatRefText.current[index] = el), chatRef: (el) => (chatRef.current[index] = el) }} socketidperson={elem.socketidperson} visible={elem.visible} />)}\n\n                    <div id=\"multi-chats\">{userChats && userChats.map((elem, index) => <MultiChats key={elem.socketidperson} chatRefProps={{ chatRefText: (el) => (chatRefText.current[index] = el), chatRef: (el) => (chatRef.current[index] = el) }} ref={(el) => (multiChatRef.current[index] = el)} socketidperson={elem.socketidperson} />)}</div>\n                </>\n            )}\n\n            <GlobalStyle />\n        </Container>\n    );\n}\n\nexport default App;\n","/home/home/Workspace/msn-js/frontend/src/pages/context/allusers.js",[],"/home/home/Workspace/msn-js/frontend/src/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/styles/global.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/multiChats/index.js",["263"],"import React, { useEffect, useState } from \"react\";\n//configs\nimport { socket } from \"../../configs/socket_export\";\n//context\nimport { useUser } from \"../../pages/context/allusers\";\n//images\nimport balloon from \"./assets/balloon.ico\";\nimport { Container } from \"./styles\";\n\nconst MultiChats = React.forwardRef((props, ref) => {\n    const { getPerson, chatRef, chatRefText } = useUser();\n\n    const [contact, setContact] = useState();\n    const [username, setUsername] = useState();\n\n    useEffect(() => {\n        setContact(getPerson(props.socketidperson));\n\n        if (contact) {\n            setUsername(contact.username);\n        }\n    });\n\n    const openchat = (socketidperson) => {\n        const indexPersonChat = chatRefText.current.findIndex((elem) => elem.id === socketidperson);\n\n        socket.emit(\"change visible chat\", socketidperson);\n        const elemento = document.getElementById(`${props.socketidperson}-multichat`);\n        elemento.style = \"background-color: white;\";\n\n        const inputDOMNode = chatRef.current[indexPersonChat];\n        inputDOMNode.parentNode.appendChild(inputDOMNode); // faz puxar para frente ao clicar para abrir\n    };\n\n    const changeColorOnHover = (mode) => {\n        const elemento = document.getElementById(`${props.socketidperson}-multichat`);\n\n        if (mode === \"over\") elemento.style = `background-color: gainsboro`;\n        if (mode === \"out\") elemento.style = `background-color: white`;\n    };\n\n    return (\n        <Container onClick={() => openchat(props.socketidperson)} ref={ref} id={`${props.socketidperson}-multichat`} onMouseOver={() => changeColorOnHover(\"over\")} onMouseOut={() => changeColorOnHover(\"out\")}>\n            <img id=\"image-balloon-multichats\" src={balloon} alt=\"\" />\n            {contact ? (\n                <p>{contact.username}</p>\n            ) : (\n                <>\n                    <p id=\"user-status-offline\" style={{ color: \"black\", textDecoration: \"line-through\" }}>\n                        {username}\n                    </p>\n                    <p style={{ color: \"red\", marginLeft: 5, fontWeight: \"bold\" }}>(Offline)</p>\n                </>\n            )}\n        </Container>\n    );\n});\n\nexport default MultiChats;\n","/home/home/Workspace/msn-js/frontend/src/scripts/ref.js",["264","265","266","267","268","269","270"],"import React, { useRef } from \"react\";\n\n//sockets\nimport { socket } from \"../configs/socket_export\";\n//sounds\nimport playsound from \"./sounds/sounds\";\n\nlet timeout = false; //Time out para o limite de chamar atenção\nlet timeoutwinks = false; //Time out para o limite de chamar atenção\n\nconst Scripts = () => {\n    const sendMessage = ({ chatRefText, multiChatRef, chatRef, message, socketidUser, socketidPerson, chatopen, usernamesend }) => {\n        if (!chatRefText.current) return false;\n        if (!socketidUser) return alert(\"Houve um erro ao enviar sua mensaem.\");\n\n        if (!chatRefText.current) return false;\n        const indexPersonChat = chatRefText.current.findIndex((elem) => {\n            if (elem) {\n                if (elem.id === socketidPerson) return socketidPerson;\n            }\n        });\n\n        const indexUserChat = chatRefText.current.findIndex((elem) => {\n            if (elem) {\n                if (elem.id === socketidUser) return socketidUser;\n            }\n        }); //s\n\n        if (chatRefText.current[indexPersonChat]) {\n            //esse é o que aparece para quem manda\n            chatRefText.current[indexPersonChat].insertAdjacentHTML(\"beforeend\", `<p id=\"chat-usarname\" style=\"color: darkgray; font-size: 14px;\"  >${usernamesend} diz:</p><p id=\"chat-textmessage\"style=\"margin-left: 10px; margin-bottom: 5px;\">${message}</p>`);\n            chatRefText.current[indexPersonChat].scrollTop = chatRefText.current[indexPersonChat].scrollHeight; //move o scroll para baixo\n        }\n        if (chatRefText.current[indexUserChat]) {\n            // esse é o que aparece para quem recebe\n            chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p id=\"chat-usarname\" style=\"color: black; font-size: 14px;\">${usernamesend} diz:</p><p id=\"chat-textmessage\" style=\"margin-left: 10px; margin-bottom: 5px;\">${message}</p>`);\n            chatRefText.current[indexUserChat].scrollTop = chatRefText.current[indexUserChat].scrollHeight; //move o scroll para baixo\n        }\n\n        if (chatopen === false) {\n            //verificando se o chat estava aberto, se caso não, deixa ele laranja\n            const indexPersonMultiChat = multiChatRef.current.findIndex((elem) => `${elem.id}` === `${socketidUser}-multichat`);\n\n            const setOrange = setInterval(() => {\n                if (chatRefText.current[indexPersonMultiChat]) multiChatRef.current[indexPersonMultiChat].style = \"background-color: orange;\";\n            }, 1000);\n            const setWhite = setInterval(() => {\n                if (chatRefText.current[indexPersonMultiChat]) multiChatRef.current[indexPersonMultiChat].style = \"background-color: white;\";\n            }, 2000);\n\n            setTimeout(() => {\n                clearInterval(setOrange);\n                clearInterval(setWhite);\n            }, 10000);\n            playsound(\"type\");\n        }\n    };\n\n    const sendAudio = ({ audioURL, socketidPerson, socketidUser, chatRefText, chatRef, multiChatRef }) => {\n        const indexPersonChat = chatRefText.current.findIndex((elem) => {\n            if (elem && elem.id === socketidPerson) return socketidPerson;\n        });\n\n        const indexUserChat = chatRefText.current.findIndex((elem) => {\n            if (elem && elem.id === socketidUser) return socketidUser;\n        }); //s\n\n        if (chatRefText.current[indexPersonChat]) {\n            //esse é o que aparece para quem manda\n            chatRefText.current[indexPersonChat].insertAdjacentHTML(\"beforeend\", ` <audio src=${audioURL} controls style='margin-bottom: 5px'/>`);\n        }\n        if (chatRefText.current[indexUserChat]) {\n            //esse é o que aparece para quem manda\n            chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", ` <audio src=${audioURL} controls style='margin-bottom: 5px'/>`);\n        }\n    };\n\n    const SendWink = ({ wink, socketidPerson, socketidUser, chatRefText, usernamesend }) => {\n        const indexUserChat = chatRefText.current.findIndex((elem) => {\n            if (elem && elem.id === socketidUser) return socketidUser;\n        }); //s\n\n        if (!timeoutwinks) {\n            timeoutwinks = true;\n            setTimeout(() => {\n                timeoutwinks = false;\n            }, 5000);\n\n            if (chatRefText.current[indexUserChat]) {\n                //esse é o que aparece para quem manda\n                chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p id=\"chat-usarname\" style=\"color: black; font-size: 14px;\">${usernamesend} envia um wink:</p>`);\n\n                chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<img src=${require(`../pages/chat/components/chat/components/sendWinks/assets/${wink}.png`).default} onclick={document.getElementById('play-wink-${wink}-${socketidUser}').click()} style=\"margin-left: 15px; cursor: pointer; text-decoration: underline; width: 70px; \"/>`);\n                chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p id=\"chat-usarname\" onclick={document.getElementById('play-wink-${wink}-${socketidUser}').click()} style=\"color: #075af5; font-size: 18px; margin-left: 15px; cursor: pointer; text-decoration: underline\">Reproduzir \"${wink}\"</p>`);\n            }\n\n            playsound(\"type\");\n            if (document.getElementById(`play-wink-${wink}-${socketidUser}`)) document.getElementById(`play-wink-${wink}-${socketidUser}`).click();\n        } else {\n            if (localStorage.getItem(\"msn-language\") === \"br\") {\n                if (chatRefText.current[indexUserChat]) chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p id='attention'>Você não pode enviar winks com tanta freqüência.</p>`);\n            } else {\n                if (chatRefText.current[indexUserChat]) chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p id='attention'>You cannot send winks as often.</p>`);\n            }\n        }\n    };\n\n    const drawAttention = ({ chatRefText, chatRef, multiChatRef, id, whosend, isend, statusperson }) => {\n        const indexPersonMultiChat = multiChatRef.current.findIndex((elem) => `${elem.id}` === `${id}-multichat`);\n        const indexPersonChat = chatRefText.current.findIndex((elem) => elem.id === id);\n        const indexUserChat = chatRefText.current.findIndex((elem) => elem.id === id);\n\n        if (!timeout) {\n            timeout = true;\n            setTimeout(() => {\n                timeout = false;\n            }, 5000);\n\n            const styles = getComputedStyle(chatRef.current[indexPersonChat]); //pegando os styles do chat\n\n            if (statusperson === \"online\") {\n                //so faz animação se a pessa estiver online.\n                playsound(\"nudge\");\n                if (isend) socket.emit(\"change visible chat draw attention\", { socketiduser: socket.id, socketidperson: id }); // faz um emit para mostrar o chat pra pessoa caso ela esteja com status online\n                if (multiChatRef.current[indexPersonMultiChat]) multiChatRef.current[indexPersonMultiChat].style = \"background-color: tomato;animation: shake 0.5s;\";\n                if (chatRef.current[indexPersonChat]) chatRef.current[indexPersonChat].style = `animation: shake 0.5s; width: ${styles.width}; height: ${styles.height};`;\n            }\n            if (localStorage.getItem(\"msn-language\") === \"br\") {\n                if (chatRefText.current[indexUserChat]) chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p>—————————</p><p id=\"chat-usarname\">${whosend} acabou de chamar a atenção!</p><p>—————————</p>`);\n            } else {\n                if (chatRefText.current[indexUserChat]) chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p>—————————</p><p id=\"chat-usarname\">${whosend} have just sent a Nudge!</p><p>—————————</p>`);\n            }\n\n            setTimeout(() => {\n                const marginLeft = +styles[\"margin-left\"].match(/[+-]?([0-9]*[.])?[0-9]+/gi);\n                if (multiChatRef.current[indexPersonMultiChat]) multiChatRef.current[indexPersonMultiChat].style = \"background-color: white;\";\n                if (chatRef.current[indexPersonChat]) chatRef.current[indexPersonChat].style = `animation: none; width: ${styles.width}; height: ${styles.height}; margin-top: ${Math.random() * (100 - 60) + 60}px; margin-left: ${Math.random() * (marginLeft + 50 - marginLeft) + marginLeft}px;`;\n            }, 500);\n\n            const inputDOMNode = chatRef.current[indexPersonChat];\n            inputDOMNode.parentNode.appendChild(inputDOMNode); // faz puxar para frente ao chamar atenção\n        } else {\n            if (!isend) return false; // so manda a mensagem abaixo só para pessoa que esta clicando mais de uma vez.\n            if (localStorage.getItem(\"msn-language\") === \"br\") {\n                if (chatRefText.current[indexUserChat]) chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p id='attention'>Você não pode pedir a atenção de alguém com tanta freqüência.</p>`);\n            } else {\n                if (chatRefText.current[indexUserChat]) chatRefText.current[indexUserChat].insertAdjacentHTML(\"beforeend\", `<p id='attention'>You can't get someone's attention often.</p>`);\n            }\n        }\n    };\n\n    return [drawAttention, sendMessage, sendAudio, SendWink];\n};\n\nexport default Scripts;\n","/home/home/Workspace/msn-js/frontend/src/pages/chat/index.js",["271","272","273"],"import React, { useEffect, useState } from \"react\";\n//icons\nimport { VscChromeClose, VscChromeMinimize } from \"react-icons/vsc\";\n//configs\nimport { socket } from \"../../configs/socket_export\";\n//context\nimport { useUser } from \"../context/allusers\";\nimport Chat from \"./components/chat/index\";\nimport ChatText from \"./components/chatText/index\";\n//componenets\nimport Header from \"./components/header/index\";\nimport Persons from \"./components/persons/index\";\n//scripts\nimport draggable from \"./scripts/draggable\";\nimport { Container } from \"./styles\";\n\nconst ChatUser = React.forwardRef((props, ref) => {\n    const { chatRefText, chatRef } = ref;\n\n    const { getPerson } = useUser();\n\n    const [person, setPerson] = useState({});\n    const [oldPerson, setOldPerson] = useState({});\n    const [user, setUser] = useState({});\n\n    const x = window.innerWidth;\n\n    const MinimizeChat = (socketidperson) => {\n        socket.emit(\"change visible chat\", socketidperson);\n    };\n\n    const closeChat = (socketidperson) => {\n        socket.emit(\"close chat\", socketidperson);\n    };\n\n    useEffect(() => {\n        draggable(props.chatRefText, props.socketidperson);\n        (async function () {\n            setPerson(await getPerson(props.socketidperson)); //Verifica o person atraves do socketidperson passado por props, pegando o objeto do backend\n            setUser(await getPerson(socket.id)); //Verifica o person atraves do socketidperson passado por props, pegando o objeto do backend\n            if (person) {\n                setOldPerson(person);\n            }\n        })();\n    }, [getPerson(props.socketidperson), getPerson(socket.id)]);\n\n    return (\n        <Container className={x < 600 ? \"\" : \"draggable-chat\"} style={{ touchAction: \"none\" }} visible={props.visible} ref={chatRef}>\n            <div id=\"header-chat-top\">\n                <button className=\"header-chat-top-buttons\" onClick={() => MinimizeChat(props.socketidperson)}>\n                    <VscChromeMinimize />\n                </button>\n                <button className=\"header-chat-top-buttons\" onClick={() => closeChat(props.socketidperson)}>\n                    <VscChromeClose color=\"red\" />\n                </button>\n                {props.children}\n            </div>\n            <div id=\"chat-top\">\n                <Header username={person ? person.username : `${oldPerson.username}`} subnick={person ? person.subnick : `${oldPerson.subnick}`} status={person ? person.status : \"invisible\"} />\n            </div>\n            <div id=\"chat-conversation\">\n                <div id=\"chat-conversation-left\">\n                    <ChatText socketidUser={socket.id} socketidperson={props.socketidperson} ref={chatRefText} status={person ? person.status : \"invisible\"} />\n                    <Chat socketidUser={socket.id} socketidPerson={props.socketidperson} />\n                </div>\n                <div id=\"chat-conversation-right\">\n                    <Persons statusUser={user ? user.status : \"invisible\"} statusPerson={person ? person.status : \"invisible\"} avatarperson={person ? person.avatar : oldPerson.avatar} avataruser={user ? user.avatar : \"\"} />\n                </div>\n            </div>\n        </Container>\n    );\n});\n\nexport default ChatUser;\n","/home/home/Workspace/msn-js/frontend/src/pages/home/index.js",["274","275","276"],"import React, { useEffect } from \"react\";\n//images\nimport ad from \"./assets/ad.png\";\nimport Contacts from \"./components/contacts\";\n//components\nimport Header from \"./components/header/index\";\nimport SideBar from \"./components/sidebar\";\nimport { Container } from \"./styles\";\n//context\nimport { useUser } from \"../context/allusers\";\n\nconst preventf5 = false;\n\nconst Home = React.forwardRef((props, ref) => {\n    const { language } = useUser();\n\n    const preventf5 = (e) => {\n        if (e.keyCode == 116) {\n            e.preventDefault();\n            language === \"br\" ? alert(\"Não é possivel atualizar essa pagina pelo teclado.\") : alert(\"It is not possible to update this page from the keyboard.\");\n        }\n    };\n\n    useEffect(() => {\n        if (!preventf5) window.addEventListener(\"keydown\", (e) => preventf5(e));\n    }, []);\n\n    return (\n        <Container>\n            <div>\n                <Header />\n            </div>\n            <div id=\"contacts-div\">\n                <SideBar />\n                <Contacts />\n            </div>\n\n            <div id=\"ad-div\">\n                <img src={ad} alt=\"\" />\n            </div>\n        </Container>\n    );\n});\n\nexport default Home;\n","/home/home/Workspace/msn-js/frontend/src/configs/socket_export.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/login/index.js",["277","278","279","280"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n//icons\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\nimport ReactLoading from \"react-loading\";\n//configs\nimport { socket } from \"../../configs/socket_export\";\n//components\nimport Navbar from \"../components/navbar/index\";\nimport Borderavatar from \"../components/modalBorder/index\";\nimport ModalCropUpdate from \"../components/modalCropUpdate\";\n//context\nimport { useUser } from \"../context/allusers\";\n//images\nimport brasil from \"./assets/brazil.svg\";\n//gif\nimport loading from \"./assets/login_loading.gif\";\nimport usa from \"./assets/united-states.svg\";\nimport { Container, Main } from \"./styles\";\n\nlet timetologin;\n\nconst Login = () => {\n    const { register, handleSubmit } = useForm();\n\n    const { getUser, setMode, language, changeLanguage } = useUser();\n    const [username, setUsername] = useState(\"\");\n    const [person, setPerson] = useState();\n    const [gifLogin, setGifLogin] = useState(false);\n\n    const [changeStatusBorder, setChangeStatusBorder] = useState();\n\n    const rememberIsChecked = useRef();\n    const autoLoginIsChecked = useRef();\n    const buttonLogin = useRef();\n\n    const sendSocketEmitStatus = (status) => {\n        socket.emit(\"change status user\", status);\n    };\n\n    const sendSocketEmitUsername = (username) => {\n        socket.emit(\"change username user\", username);\n    };\n\n    const onSubmit = (data) => {\n        setGifLogin(true);\n        buttonLogin.current.disabled = true;\n\n        sendSocketEmitUsername(data.username); // troca username ao entrar\n        timetologin = setTimeout(() => {\n            if (!data.username || data.username === \" \" || data.username === \"\") {\n                alert(language === \"br\" ? \"Você deve colocar o seu nome de usuário.\" : \"You must enter your username.\");\n                buttonLogin.current.disabled = false;\n                setGifLogin(false);\n                return false;\n            }\n\n            sendSocketEmitStatus(data.status); // troca status ao entrar.\n\n            data.socketid = socket.id;\n            if (rememberIsChecked.current) data.remember = rememberIsChecked.current.checked;\n            if (autoLoginIsChecked.current) data.autologin = autoLoginIsChecked.current.checked;\n\n            //se o input estiver selecionado, irá as informações.\n            if (data.remember) {\n                localStorage.setItem(\"saveUser\", JSON.stringify({ username: data.username, avatar: person.avatar, autologin: autoLoginIsChecked.current.checked }));\n            } else {\n                //caso nao esteja ele irá remover.\n                localStorage.removeItem(\"saveUser\");\n            }\n\n            if (JSON.parse(localStorage.getItem(\"saveUser\"))) {\n                let avatar = JSON.parse(localStorage.getItem(\"saveUser\")).avatar; // pega o avatar que esta em local storage\n                if (changeStatusBorder !== \"invisible\") {\n                    socket.emit(\"socket connected notification\", { avatar }); // faz um emit pro serivdor\n                }\n            } else {\n                if (changeStatusBorder !== \"invisible\" && person?.avatar) {\n                    socket.emit(\"socket connected notification\", { avatar: person.avatar });\n                }\n            }\n\n\n            setMode(\"home\"); //muda para home depois que clica.\n        }, 3500);\n    };\n\n    const handleCancelLogin = () => {\n        clearInterval(timetologin);\n        setGifLogin(false);\n        buttonLogin.current.disabled = false;\n    };\n\n    const handleChangeUsername = (e) => {\n        //muda o state de username\n        setUsername(e.target.value);\n    };\n\n    const handleVerifyRememberInput = () => {\n        //Função onde verifica se o input de lembrar está ativo, se sim ele deixar clicar para entrar automaticamente.\n        if (rememberIsChecked.current.checked) {\n            autoLoginIsChecked.current.disabled = false;\n        } else {\n            autoLoginIsChecked.current.disabled = true;\n            autoLoginIsChecked.current.checked = false;\n        }\n    };\n\n    const clearSaveUser = () => {\n        localStorage.removeItem(\"saveUser\");\n        setUsername(\"\");\n        rememberIsChecked.current.checked = false;\n        autoLoginIsChecked.current.checked = false;\n        socket.emit(\"change avatar\", \"\");\n        alert(language === \"br\" ? \"Informações limpas\" : \"Information deleted.\");\n    };\n\n    (async function () {\n        setPerson(await getUser(socket.id));\n    })();\n\n    useEffect(() => {\n        if (localStorage.getItem(\"saveUser\")) {\n            let infos = JSON.parse(localStorage.getItem(\"saveUser\"));\n            setUsername(infos.username);\n            socket.emit(\"change avatar\", infos.avatar);\n            rememberIsChecked.current.checked = true;\n            autoLoginIsChecked.current.disabled = false;\n            autoLoginIsChecked.current.checked = infos.autologin;\n\n            if (autoLoginIsChecked.current.checked === true && person) {\n                buttonLogin.current.click();\n            }\n        }\n        if (localStorage.getItem(\"msn-language\")) {\n            changeLanguage(localStorage.getItem(\"msn-language\"));\n        }\n    }, person);\n\n    return (\n        <Main>\n            <Navbar />\n            <Container>\n                {person ? <Borderavatar avatar={person.avatar} size=\"96\" status={changeStatusBorder} minus=\"22\" top=\"4px\" left=\"3px\"></Borderavatar> : <ReactLoading type=\"spin\" color=\"black\" height={100} width={100} />}\n\n                <ModalCropUpdate className=\"change-photo-button\">\n                    <BsPencil size={15} color=\"black\" />\n                </ModalCropUpdate>\n                <div id=\"div-country-flag\">\n                    <img onClick={() => changeLanguage(\"br\")} className=\"country-flag\" src={brasil} />\n                    <img onClick={() => changeLanguage(\"en\")} className=\"country-flag\" src={usa} />\n                </div>\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"div-input-login\">\n                        <p>{language === \"br\" ? \"Nome de usuario:\" : \"Username:\"}</p>\n                        <input id=\"login-input-email\" ref={register} name=\"username\" type=\"text\" value={username} onChange={handleChangeUsername} />\n                    </div>\n\n                    <div id=\"login-status\">\n                        <p>{language === \"br\" ? \"Entrar como:\" : \"Sign in as:\"}</p>\n                        <select ref={register} name=\"status\" onChange={(e) => setChangeStatusBorder(e.target.value)}>\n                            <option value=\"online\">{language === \"br\" ? \"Online (Padrão)\" : \"Online (Default)\"}</option>\n                            <option value=\"busy\">{language === \"br\" ? \"Ocupado\" : \"Busy\"}</option>\n                            <option value=\"away\">{language === \"br\" ? \"Ausente\" : \"Away\"}</option>\n                            <option value=\"invisible\">Offline</option>\n                        </select>\n                    </div>\n                    <div className=\"checkbox-buttons-login\">\n                        <input type=\"checkbox\" ref={rememberIsChecked} onChange={handleVerifyRememberInput}></input>\n                        <p>{language === \"br\" ? \"Lembrar-me\" : \"Remember-me\"}</p>\n                        <button type=\"button\" onClick={clearSaveUser}>\n                            <BsTrash />\n                        </button>\n                    </div>\n                    <div className=\"checkbox-buttons-login\">\n                        <input disabled type=\"checkbox\" ref={autoLoginIsChecked}></input>\n                        <p>{language === \"br\" ? \"Entrar Automaticamente\" : \"Sign me in automatically\"}</p>\n                    </div>\n                    <div id=\"footer-buttons\">\n                        {person ? (\n                            <button ref={buttonLogin} type=\"submit\">\n                                {language === \"br\" ? \"Entrar\" : \"Sign in\"}\n                            </button>\n                        ) : (\n                            <button\n                                type=\"button\"\n                                ref={buttonLogin}\n                                onClick={() => {\n                                    alert(language === \"br\" ? \"Não foi possivel conectar ao servidor, tente novamente!\" : \"Unable to connect to the server, try again!\");\n                                }}\n                            >\n                                {language === \"br\" ? \"Entrar\" : \"Sign in\"}\n                            </button>\n                        )}\n                    </div>\n                </form>\n                {gifLogin && (\n                    <div id=\"div-gif-singin\">\n                        <small>{language === \"br\" ? \"Entrando...\" : \"Signing in...\"}</small>\n                        <img src={loading} alt=\"gif-singin\" />\n                        <p onClick={handleCancelLogin}>{language === \"br\" ? \"Cancelar\" : \"Cancel\"}</p>\n                    </div>\n                )}\n            </Container>\n        </Main>\n    );\n};\n\nexport default Login;\n","/home/home/Workspace/msn-js/frontend/src/pages/components/notificationOnline/index.js",["281","282"],"import React, { useEffect, useRef, useState } from \"react\";\n//icons\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport NotificationSystem from \"react-notification-system\";\n//configs\nimport { socket } from \"../../../configs/socket_export\";\n//components sounds\nimport playsound from \"../../../scripts/sounds/sounds\";\n//components\nimport ModalBorder from \"../../components/modalBorder/index\";\n//context\nimport { useUser } from \"../../context/allusers\";\n//images\nimport msnLogo from \"./assets/msn-logo.png\";\nimport { Container } from \"./styles\";\n\nconst NotificationOnline = () => {\n    const [person, setPerson] = useState();\n    const notificationSystem = useRef();\n    const ButtonnotificationSystem = useRef();\n\n    const { language } = useUser();\n\n    const stylemsn = {\n        Containers: {\n            DefaultStyle: {\n                fontFamily: \"inherit\",\n                position: \"fixed\",\n                width: \"250px\",\n                padding: \"0 10px 10px 10px\",\n                zIndex: 9998,\n                WebkitBoxSizing: \"border-box\",\n                MozBoxSizing: \"border-box\",\n                boxSizing: \"border-box\",\n            },\n        },\n        NotificationItem: {\n            info: {\n                // Applied only to the success notification item\n                color: \"red\",\n            },\n            DefaultStyle: {\n                position: \"relative\",\n                background: \"transparent\",\n                width: \"100%\",\n                height: \"130px\",\n                cursor: \"pointer\",\n                borderRadius: \"2px\",\n                fontSize: \"13px\",\n                margin: \"10px 0 0\",\n                padding: \"10px\",\n                display: \"block\",\n                WebkitBoxSizing: \"border-box\",\n                MozBoxSizing: \"border-box\",\n                boxSizing: \"border-box\",\n                opacity: 0,\n                transition: \"0.3s ease-in-out\",\n                WebkitTransform: \"translate3d(0, 0, 0)\",\n                transform: \"translate3d(0, 0, 0)\",\n                willChange: \"transform, opacity\",\n\n                isHidden: {\n                    opacity: 0,\n                },\n\n                isVisible: {\n                    opacity: 1,\n                },\n            },\n\n            info: {\n                borderTop: \"2px solid \" + \"transparent\",\n                backgroundColor: \"#e8f0f4\",\n                color: \"#41555d\",\n                WebkitBoxShadow: \"0 0 1px rgba(\" + (236, 61, 61) + \",\" + 0.9 + \")\",\n                MozBoxShadow: \"0 0 1px rgba(\" + (236, 61, 61) + \",\" + 0.9 + \")\",\n                boxShadow: \"0 0 1px rgba(\" + (236, 61, 61) + \",\" + 0.9 + \")\",\n            },\n        },\n    };\n\n    const addNotification = (event) => {\n        // event.preventDefault();\n        playsound(\"online\");\n        notificationSystem.current.addNotification({\n            level: \"info\",\n            position: \"br\",\n            children: (\n                <Container>\n                    <div id=\"header\">\n                        <img src={msnLogo} alt=\"msn logo\" />\n                        <p>Windows Live MessengerJS</p>\n                        <AiOutlineClose />\n                    </div>\n                    <div id=\"body\">\n                        {person ? <ModalBorder avatar={person.avatar} size=\"32\" minus=\"12\" left=\"4px\" top=\"4px\" /> : <ModalBorder avatar=\"\" size=\"32\" minus=\"12\" left=\"4px\" top=\"4px\" />}\n\n                        <div id=\"body-username\">\n                            <p>{person ? person.username : language === \"br\" ? \"Alguém\" : \"Somebody\"}</p>\n                            <p>{language === \"br\" ? \"acabou de entrar.\" : \"has just signed in.\"}</p>\n                        </div>\n                    </div>\n                </Container>\n            ),\n        });\n    };\n\n    useEffect(() => {\n        socket.on(\"socket connected notification\", (data) => {\n            setPerson(data);\n            if (ButtonnotificationSystem) {\n                if (ButtonnotificationSystem.current) {\n                    ButtonnotificationSystem.current.click();\n                }\n            }\n        });\n    }, []);\n\n    return (\n        <>\n            <NotificationSystem ref={notificationSystem} style={stylemsn} />\n            <button id=\"button-add-notification\" onClick={addNotification} style={{ position: \"absolute\", zIndex: \"-3\" }} ref={ButtonnotificationSystem} />\n        </>\n    );\n};\n\nexport { NotificationOnline };\n","/home/home/Workspace/msn-js/frontend/src/pages/multiChats/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/configs/config_connections.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/home/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/login/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/scripts/sounds/sounds.js",["283","284"],"//sounds\nimport nudge from \"./assets/nudge.mp3\";\nimport online from \"./assets/online.mp3\";\nimport type from \"./assets/type.mp3\";\n\nexport default (param) => {\n    let sound;\n    switch (param) {\n        case \"online\":\n            sound = online;\n            break;\n        case \"nudge\":\n            sound = nudge;\n            break;\n        case \"type\":\n            sound = type;\n            break;\n    }\n    let audio = new Audio(sound);\n    audio.play();\n};\n","/home/home/Workspace/msn-js/frontend/src/pages/components/notificationOnline/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/scripts/draggable.js",["285"],"import interact from \"interactjs\";\n\nexport default (chatRefText, socketidUser) => {\n    const indexUserChat = chatRefText.current.findIndex((elem) => elem.id === socketidUser);\n\n    interact(\".draggable-chat\")\n        .draggable({\n            // enable inertial throwing\n            inertia: true,\n            // keep the element within the area of it's parent\n            modifiers: [\n                interact.modifiers.restrictRect({\n                    restriction: \"parent\",\n                    endOnly: true,\n                }),\n            ],\n            // enable autoScroll\n            autoScroll: true,\n\n            listeners: {\n                // call this function on every dragmove event\n                move: dragMoveListener,\n\n                // call this function on every dragend event\n            },\n        })\n        .resizable({\n            edges: { top: true, left: true, bottom: true, right: true },\n            listeners: {\n                move: function (event) {\n                    Object.assign(event.target.style, {\n                        width: `${event.rect.width}px`,\n                        height: `${event.rect.height}px`,\n                    });\n                },\n            },\n        });\n\n    function dragMoveListener(event) {\n        var target = event.target;\n        // keep the dragged position in the data-x/data-y attributes\n        var x = (parseFloat(target.getAttribute(\"data-x\")) || 0) + event.dx;\n        var y = (parseFloat(target.getAttribute(\"data-y\")) || 0) + event.dy;\n\n        target.parentNode.appendChild(target); // faz puxar para frente ao mover...\n        if (chatRefText.current[indexUserChat]) chatRefText.current[indexUserChat].scrollTop = chatRefText.current[indexUserChat].scrollHeight; //move o scroll para baixo\n\n        chatRefText.current.forEach((elem, index) => {\n            if (elem) {\n                if (elem.scrollTop) elem.scrollTop = elem.scrollHeight;\n            }\n        });\n\n        // translate the element\n        target.style.webkitTransform = target.style.transform = \"translate(\" + x + \"px, \" + y + \"px)\";\n\n        // update the posiion attributes\n        target.setAttribute(\"data-x\", x);\n        target.setAttribute(\"data-y\", y);\n    }\n\n    // this function is used later in the resizing and gesture demos\n    window.dragMoveListener = dragMoveListener;\n};\n","/home/home/Workspace/msn-js/frontend/src/pages/components/navbar/index.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/modalBorder/index.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/home/components/header/index.js",["286","287","288","289","290","291","292","293","294"],"import React, { useEffect, useState, useRef } from \"react\";\n//icons\nimport { BsMusicNoteBeamed, BsPencil } from \"react-icons/bs\";\nimport { FaSpotify } from \"react-icons/fa\";\nimport { ImExit } from \"react-icons/im\";\n//tooltip\nimport ReactTooltip from \"react-tooltip\";\n//configs\nimport { config } from \"../../../../configs/config_connections\";\n//socket\nimport { socket } from \"../../../../configs/socket_export\";\n//components\nimport AeroButton from \"../../../components/aeroButton/index\";\nimport Borderavatar from \"../../../components/modalBorder/index\";\nimport ModalCropUpdate from \"../../../components/modalCropUpdate\";\nimport Crop from \"../../../components/modalCropUpdate/components/crop/index\";\nimport NavBar from \"../../../components/navbar/index\";\n//context\nimport { useUser } from \"../../../context/allusers\";\n//images\nimport brasil from \"./assets/brazil.svg\";\nimport navbarColors from \"./assets/navbar/navbar-colors.png\";\nimport navbarContacts from \"./assets/navbar/navbar-contacts.png\";\nimport navbarMail from \"./assets/navbar/navbar-mail.png\";\n//images navbar\nimport navbarNews from \"./assets/navbar/navbar-news.png\";\nimport usa from \"./assets/united-states.svg\";\nimport { Navbar, Profile } from \"./styles\";\n\nconst configs = config();\n\nconst Header = () => {\n    const { getUser, theme, changeTheme, language, changeLanguage, setMode } = useUser();\n    const [person, setPerson] = useState();\n    const selectstatus = useRef();\n\n    const handleChangeStatus = async (e) => {\n        if (e.target.value === \"online\") {\n            if (JSON.parse(localStorage.getItem(\"saveUser\"))) {\n                let avatar = JSON.parse(localStorage.getItem(\"saveUser\")).avatar; // pega o avatar que esta em local storage\n                socket.emit(\"socket connected notification\", { avatar }); // faz um emit pro serivdor\n            } else {\n                socket.emit(\"socket connected notification\", { avatar: person.avatar }); // faz um emit pro serivdor\n            }\n        }\n        socket.emit(\"change status user\", e.target.value);\n    };\n    const logout = () => {\n        if (localStorage.getItem(\"saveUser\")) {\n            let infos = JSON.parse(localStorage.getItem(\"saveUser\"));\n            const username = infos.username;\n            const avatar = infos.avatar;\n            localStorage.setItem(\"saveUser\", JSON.stringify({ username: username, avatar, autologin: false }));\n        }\n        socket.emit(\"change status user\", \"invisible\");\n        setMode(\"login\");\n    };\n\n    const sendSubnick = (event) => {\n        event.preventDefault();\n        const input = document.getElementById(\"myInput-subnick\");\n        input.blur();\n        socket.emit(\"change subnick user\", input.value);\n    };\n\n    useEffect(() => {\n        if (person) {\n            selectstatus.current.value = person.status;\n        }\n        socket.on(\"return subnick user\", (data) => {\n            const input = document.getElementById(\"myInput-subnick\");\n            input.value = data;\n        });\n\n        (async function () {\n            setPerson(await getUser(socket.id));\n        })();\n    });\n\n    const menuSubnick = async () => {\n        window.open(`http://${configs.ipServer}/routes/spotify/login?socketid=${socket.id}`, \"_blank\", \"location=yes,height=570,width=520,scrollbars=yes,status=yes\");\n    };\n\n    return (\n        <>\n            <ReactTooltip multiline={true} />\n            <Profile color={theme}>\n                {/* <NavBar /> */}\n                <div id=\"profile\">\n                    <div id=\"left\">\n                        {person ? <Borderavatar avatar={person.avatar} size=\"64\" status={person.status} minus=\"19\" top=\"2px\" left=\"2px\"></Borderavatar> : <Borderavatar avatar=\"\" size=\"64\" status=\"online\" minus=\"19\" top=\"2px\" left=\"2px\"></Borderavatar>}\n                        <button id=\"btn-edit-photo-shadow\">\n                            <BsPencil size={20} color=\"white\" />\n                        </button>\n                        <ModalCropUpdate id=\"btn-edit-photo\">\n                            <button id=\"btn-edit-photo\" onClick={() => <Crop />}>\n                                <BsPencil size={20} color=\"#454545\" />\n                            </button>\n                        </ModalCropUpdate>\n                    </div>\n                    <div id=\"right\">\n                        <span className=\"span-username\">\n                            <div>\n                                {person ? <p id=\"username\">{person.username}</p> : <p id=\"username\">Não informado</p>}\n\n                                <small>\n                                    <select onChange={(e) => handleChangeStatus(e)} ref={selectstatus}>\n                                        <option value=\"online\">(Online)</option>\n                                        <option value=\"busy\">{language === \"br\" ? \"(Ocupado)\" : \"(Busy)\"}</option>\n                                        <option value=\"away\">{language === \"br\" ? \"(Ausente)\" : \"(Away)\"}</option>\n                                        <option value=\"invisible\">(Offline)</option>\n                                    </select>\n                                </small>\n                            </div>\n                            {/* <div>\n                                <img onClick={() => changeLanguage(\"br\")} className=\"country-flag\" src={brasil} alt=\"\" />\n                                <img onClick={() => changeLanguage(\"en\")} className=\"country-flag\" src={usa} alt=\"\" />\n                                <div style={{ marginLeft: 30, cursor: \"pointer\" }}>\n                                    <ImExit onClick={logout} size={30} />\n                                </div>\n                            </div> */}\n                        </span>\n\n                        <div id=\"div-subnick\">\n                            {/* <AeroButton datatip={language === \"br\" ? \"Clique para inserir a musica<br /> que está ouvindo agora no spotify.\" : \"Click to insert the song <br /> you are listening to now on spotify.\"} onCustomClick={() => menuSubnick()}>\n                                <FaSpotify size=\"20\" color=\"white\" />\n                                <p style={{ color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                                    {language === \"br\" ? \"Conectar\" : \"Connect\"}\n                                    <BsMusicNoteBeamed size={15} style={{ marginLeft: 5 }} />\n                                </p>\n                            </AeroButton> */}\n                            <AeroButton id=\"sub-nick\">\n                                <form onSubmit={(e) => sendSubnick(e)}>\n                                    <input placeholder={language === \"br\" ? \"Insira seu subnick aqui\" : \"Insert your subnick here\"} type=\"text\" id=\"myInput-subnick\" onBlur={(e) => sendSubnick(e)}></input>\n                                </form>\n                            </AeroButton>\n                        </div>\n                    </div>\n                </div>\n            </Profile>\n            <Navbar color={theme}>\n                <div id=\"left\">\n                    <AeroButton className=\"button\" disabled={true}>\n                        <img src={navbarMail} alt=\"\" />\n                    </AeroButton>\n                    <AeroButton className=\"button\" disabled={true}>\n                        <img src={navbarContacts} alt=\"\" />\n                    </AeroButton>\n                    <AeroButton className=\"button\" disabled={true}>\n                        <img src={navbarNews} alt=\"\" />\n                    </AeroButton>\n                </div>\n                <div id=\"right\">\n                    <AeroButton className=\"button\" onCustomClick={() => changeTheme()}>\n                        <img src={navbarColors} alt=\"\" />\n                    </AeroButton>\n                </div>\n            </Navbar>\n        </>\n    );\n};\n\nexport default Header;\n","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/index.js",["295","296"],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport ContentEditable from \"react-contenteditable\";\n//configs\nimport { socket } from \"../../../../configs/socket_export\";\n//components\nimport AeroButton from \"../../../components/aeroButton/index\";\nimport emotions from \"./assets/emoticon.png\";\nimport Audio from \"../../../components/audioRecorder/index\";\nimport SendWinks from \"./components/sendWinks\";\nimport SendEmoticon from \"./components/sendEmoticons\";\nimport preventChat from \"./components/identifyEmoticonChat/index\";\n\n//images\nimport points from \"./assets/points.png\";\nimport tilt from \"./assets/tilt.png\";\nimport voice from \"./assets/voice.png\";\nimport winks from \"./assets/winks.png\";\nimport { Container, HeaderChat, MultiPoints, Sender, DivRecordVoice } from \"./styles\";\n\n//context\nimport { useUser } from \"../../../context/allusers\";\n\n//winks\nimport Winks from \"./components/sendWinks/components/winks/index\";\n\nconst Chat = (props) => {\n    const { language } = useUser();\n    const [record, setRecord] = useState();\n    const [visibleSendWinks, setVisibleSendWinks] = useState(false);\n    const [visibleSendEmoticons, setVisibleSendEmoticon] = useState(false);\n    const DivRecordVoiceRef = useRef(null);\n    const refContentEditable = useRef(\"\"); // referencia do textArea de digitar\n    const [texto, setTexto] = useState(\"\"); // state que coleta o que esta sendo escrito\n    let [preventEmoticons, eastereggschat] = preventChat(); //essas funções verificam o que esta sendo escrito no chat antes de enviar, e faz alguma ação se o que esta sendo escrito for algo especifico.\n\n    const handleClickDrawAttention = () => {\n        const socketidPerson = props.socketidPerson;\n        socket.emit(\"Draw AttenAttention\", socketidPerson);\n    };\n\n    useEffect(() => {\n        preventEmoticons({ texto: refContentEditable.current.lastHtml, setTexto });\n        eastereggschat({ texto: refContentEditable.current.lastHtml, setTexto });\n    }, [refContentEditable.current.lastHtml]);\n\n    const handleSend = (e) => {\n        if (!refContentEditable.current.lastHtml || refContentEditable.current.lastHtml === \"\" || refContentEditable.current.lastHtml === \" \" || refContentEditable.current.lastHtml === \"\") return false;\n\n        if (props.socketidUser && props.socketidPerson) {\n            const socketidUser = props.socketidUser;\n            const socketidPerson = props.socketidPerson;\n\n            socket.emit(\"send server message text\", { message: refContentEditable.current.lastHtml, socketidUser, socketidPerson });\n            setTexto(\"\");\n        }\n    };\n\n    const onPressEnter = (e) => {\n        //Essa função serve para quando a pessoa quiser mandar por enter... caso ela clique no botão de enviar ela nem passa por aqui.\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            handleSend();\n        }\n    };\n\n    return (\n        <>\n            <MultiPoints>\n                <img src={points} alt=\"icon-points\" />\n            </MultiPoints>\n            <Winks socketidPerson={props.socketidPerson}></Winks>\n\n            <HeaderChat>\n                <AeroButton onCustomClick={() => (visibleSendEmoticons ? setVisibleSendEmoticon(false) : setVisibleSendEmoticon(true))}>\n                    <img src={emotions} alt=\"icon-emotions\" />\n                    <SendEmoticon socketidPerson={props.socketidPerson} visible={visibleSendEmoticons} ref={refContentEditable} setTexto={setTexto} texto={texto} />\n                </AeroButton>\n                <AeroButton onCustomClick={() => (visibleSendWinks ? setVisibleSendWinks(false) : setVisibleSendWinks(true))}>\n                    <img src={winks} alt=\"icon-winks\" />\n                    <SendWinks socketidPerson={props.socketidPerson} visible={visibleSendWinks} />\n                </AeroButton>\n                <AeroButton onCustomClick={handleClickDrawAttention}>\n                    <img src={tilt} alt=\"icon-tilt\" />\n                </AeroButton>\n                <DivRecordVoice ref={DivRecordVoiceRef}>\n                    <AeroButton>\n                        <img src={voice} alt=\"icon-voice\" style={{ margin: 0, padding: 0, marginTop: 2, height: 14 }} />\n                    </AeroButton>\n                    <Audio audioURL={record} socketidPerson={props.socketidPerson} />\n                </DivRecordVoice>\n            </HeaderChat>\n\n            <Container>\n                <ContentEditable id=\"text-area\" html={texto} onChange={(e) => setTexto(e.target.value)} onKeyDown={onPressEnter} ref={refContentEditable} />\n            </Container>\n            <Sender>\n                <button onClick={handleSend}>{language === \"br\" ? \"Enviar\" : \"Send\"}</button>\n            </Sender>\n        </>\n    );\n};\n\nexport default Chat;\n","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/header/index.js",["297"],"import React from \"react\";\n//components\nimport AeroButton from \"../../../components/aeroButton/index\";\n//images\nimport balloon from \"./assets/balloon.ico\";\nimport block from \"./assets/block.png\";\nimport folder from \"./assets/folder.png\";\nimport games from \"./assets/games.png\";\nimport invite from \"./assets/invite.png\";\nimport listen from \"./assets/listen-music.png\";\nimport music from \"./assets/music.png\";\nimport phone from \"./assets/phone.png\";\nimport { Container } from \"./styles\";\n\nconst Header = (props) => {\n    let statusName;\n    switch (props.status) {\n        case \"online\":\n            statusName = \"Online\";\n            break;\n        case \"away\":\n            statusName = \"Ausente\";\n            break;\n        case \"busy\":\n            statusName = \"Ocupado\";\n            break;\n        case \"invisible\":\n            statusName = \"Offline\";\n            break;\n        default:\n            statusName = \"\";\n    }\n    return (\n        <Container>\n            <div id=\"div-username-subnick-chat\">\n                <div id=\"div-username\">\n                    <img src={balloon} alt=\"icons-balloon\" />\n                    <p id=\"username\">{props.username && `${props.username} - ${statusName}`}</p>\n                </div>\n                {/* <div id=\"div-subnick\">{props.subnick && <p id=\"subnick-header\">{props.subnick}</p>}</div> */}\n                <div id=\"div-subnick\">\n                    {props.music ? (\n                        props.music.name ? (\n                            <>\n                                <img src={listen} alt=\"icons-listen\" style={{ marginRight: 10, width: 15 }} />\n                                <a id=\"contact-music\" href={props.music.url} target=\"_blank\" style={{ fontSize: 2, color: \"blue\" }}>\n                                    {props.music.name} ({props.music.author})\n                                </a>\n                            </>\n                        ) : (\n                            <p id=\"contact-subnick\"></p>\n                        )\n                    ) : props.subnick ? (\n                        <p id=\"subnick-header\">{props.subnick}</p>\n                    ) : (\n                        <p id=\"subnick-header\"></p>\n                    )}\n                </div>\n            </div>\n            <div id=\"div-chat-menu-header\">\n                <div id=\"left\">\n                    <AeroButton disabled={true}>\n                        <img src={invite} alt=\"icon-invite\"></img>\n                    </AeroButton>\n                    <AeroButton disabled={true}>\n                        <img src={folder} alt=\"icons-folder\"></img>\n                    </AeroButton>\n                    <AeroButton disabled={true}>\n                        <img src={phone} alt=\"icon-fone\"></img>\n                    </AeroButton>\n                    <AeroButton disabled={true}>\n                        <img src={music} alt=\"icon-music\"></img>\n                    </AeroButton>\n                    <AeroButton disabled={true}>\n                        <img src={games} alt=\"icon-games\"></img>\n                    </AeroButton>\n                    <AeroButton disabled={true}>\n                        <img src={block} alt=\"icon-block\"></img>\n                    </AeroButton>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Header;\n","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chatText/index.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/persons/index.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/modalBorder/verifyAvatarDefault.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/index.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/home/components/sidebar/index.js",["298","299","300"],"import React from \"react\";\n//icons\nimport { AiFillGithub, AiFillLinkedin, AiOutlineInstagram } from \"react-icons/ai\";\n//components\nimport AeroButton from \"../../../components/aeroButton/index\";\n//images\nimport msnLogo from \"./assets/msn-logo.png\";\nimport { Container } from \"./styles\";\n\nconst sidebar = () => {\n    return (\n        <Container>\n            <AeroButton className=\"button\">\n                <img src={msnLogo} alt=\"\" />\n            </AeroButton>\n            <AeroButton className=\"button\">\n                <a href=\"http://www.github.com/pablobion\" target=\"_blank\">\n                    <AiFillGithub size=\"30\" />\n                </a>\n            </AeroButton>\n            <AeroButton className=\"button\">\n                <a href=\"http://www.linkedin.com/in/pablobion\" target=\"_blank\">\n                    <AiFillLinkedin size=\"30\" color=\"#0e76a8\" />\n                </a>\n            </AeroButton>\n            <AeroButton className=\"button\">\n                <a href=\"http://www.instagram.com/pablobion\" target=\"_blank\">\n                    <AiOutlineInstagram size=\"30\" color=\"#E1306C\" />\n                </a>\n            </AeroButton>\n        </Container>\n    );\n};\n\nexport default sidebar;\n","/home/home/Workspace/msn-js/frontend/src/pages/home/components/contacts/index.js",["301"],"import React from \"react\";\n//icons and images\nimport { BiSearch } from \"react-icons/bi\";\nimport { socket } from \"../../../../configs/socket_export\";\n//components\nimport AeroButton from \"../../../components/aeroButton/index\";\n//context\nimport { useUser } from \"../../../context/allusers\";\nimport addcontact from \"./assets/add-contact.png\";\nimport sortContacts from \"./assets/sort-contacts.png\";\nimport Contact from \"./components/contact/index\";\nimport { Container } from \"./styles\";\n\nconst Contacts = () => {\n    const { contactsOnline, countContactsOnline, language } = useUser();\n\n    return (\n        <Container>\n            <div id=\"search-contacts\">\n                <input type=\"text\"></input>\n                <AeroButton className=\"button\" disabled={true}>\n                    <BiSearch color=\"gray\" />\n                </AeroButton>\n                <AeroButton className=\"button\" disabled={true}>\n                    <img src={addcontact} alt=\"\" />\n                </AeroButton>\n                <AeroButton className=\"button\" disabled={true}>\n                    <img src={sortContacts} alt=\"\" />\n                </AeroButton>\n            </div>\n            <div id=\"contacts-list\">\n                <details className=\"contacts-group-list\">\n                    <summary>Online ({countContactsOnline})</summary>\n                    <div id=\"contacts-group-list-contacts\">\n                        {contactsOnline &&\n                            contactsOnline.map((elem) => {\n                                if (socket.id === elem.socketid) {\n                                    return <Contact username={elem.username} status={elem.status} subnick={elem.subnick} socketid={elem.socketid} key={elem.socketid} music={elem.music} disabled={true} />;\n                                }\n                                if (elem.status !== \"invisible\") {\n                                    return <Contact username={elem.username} status={elem.status} subnick={elem.subnick} socketid={elem.socketid} key={elem.socketid} music={elem.music} disabled={false} />;\n                                }\n                            })}\n                        <small style={{ color: \"darkgray\", height: \"100%\" }}>{language === \"br\" ? \"* Usuários onlines aparecerão nesta lista.\" : \"* Online users will appear in this list.\"}</small>\n                    </div>\n                </details>\n            </div>\n        </Container>\n    );\n};\n\nexport default Contacts;\n","/home/home/Workspace/msn-js/frontend/src/pages/components/navbar/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/modalBorder/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/home/components/header/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/persons/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chatText/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/header/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/aeroButton/index.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/audioRecorder/index.js",["302"],"import React, { useState } from \"react\";\nimport useRecorder from \"./useRecorder\";\n\nimport { Container } from \"./styles\";\n\n//icons\nimport { BsPlayFill } from \"react-icons/bs\";\nimport { GrStopFill } from \"react-icons/gr\";\nimport { FiSend } from \"react-icons/fi\";\nimport { BsFillTrashFill } from \"react-icons/bs\";\nimport { AiOutlineAudioMuted, AiOutlineAudio } from \"react-icons/ai\";\n\nfunction App(props) {\n    let [audioURL, isRecording, startRecording, stopRecording, sendRecording, deleteAudio] = useRecorder();\n    const [mode, setMode] = useState(\"stop\");\n\n    const handleClick = () => {\n        if (mode === \"stop\") {\n            startRecording();\n            setMode(\"play\");\n        } else {\n            stopRecording();\n            setMode(\"stop\");\n        }\n    };\n    return (\n        <Container>\n            {/* <audio src={props.audioURL} controls /> */}\n            {mode === \"stop\" ? (\n                <button onClick={handleClick}>\n                    <BsPlayFill size={17} />\n                    <AiOutlineAudio size={17} />\n                </button>\n            ) : (\n                <div style={{ display: \"flex\", alignItems: \"center\", marginRight: 5 }}>\n                    <button onClick={handleClick}>\n                        <GrStopFill size={17} />\n                        <AiOutlineAudioMuted size={17} />\n                    </button>\n                </div>\n            )}\n\n            <button onClick={() => sendRecording({ socketidPerson: props.socketidPerson })} disabled={!audioURL}>\n                Enviar <FiSend style={{ marginLeft: 5 }} color={!audioURL ? \"gray\" : \"green\"} />\n            </button>\n            <button disabled={!audioURL} onClick={deleteAudio}>\n                <BsFillTrashFill />\n            </button>\n        </Container>\n    );\n}\n\nexport default App;\n","/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/identifyEmoticonChat/index.js",["303","304","305"],"import React, { useRef } from \"react\";\n\nconst Scripts = () => {\n    const preventEmoticons = ({ texto, setTexto }) => {\n        // const regex = /:\\)|:-\\)|:\\(|:-\\(|;\\);-\\)|:-O|8-|:P|:D|:\\||:S|:\\$|:@|8o\\||\\+o\\(|\\(H\\)|\\(C\\)|\\(\\?\\)/gm;\n\n        const emoticons = {\n            \":)\": 1,\n            \"(:\": 1,\n            \":D\": 2,\n            \";)\": 3,\n            \":o\": 4,\n            \":O\": 4,\n            \"(h)\": 5,\n            \"(H)\": 5,\n            \":@\": 6,\n            \":s\": 7,\n            \":S\": 7,\n            \":$\": 8,\n            \":(\": 9,\n            \"):\": 9,\n            \":|\": 10,\n            \"(a)\": 11,\n            \"(A)\": 11,\n            \":r\": 12,\n            \":R\": 12,\n            \"8|\": 13,\n            \"8-|\": 13,\n            \"|-)\": 14,\n            \"8-)\": 15,\n            \"^o)\": 16,\n            \":/\": 17,\n            \":p\": 18,\n            \":P\": 18,\n            \":{\": 19,\n            \":e\": 20,\n            \":E\": 20,\n            \":[\": 21,\n            \":'(\": 21,\n            \"]:\": 21,\n            \")':\": 21,\n            \"(y)\": 22,\n            \"(Y)\": 22,\n            \"(n)\": 23,\n            \"(N)\": 23,\n            \"(z)\": 26,\n            \"(Z)\": 26,\n            \"(x)\": 24,\n            \"(X)\": 24,\n            \"(d)\": 25,\n            \"(D)\": 25,\n            \"(i)\": 27,\n            \"(I)\": 27,\n            \"(^)\": 28,\n            \"(*)\": 29,\n            \":#\": 30,\n            \"#:\": 30,\n            \"<:o\": 31,\n            \"(l)\": 32,\n            \"(L)\": 32,\n            \"<3\": 32,\n            \"(u)\": 33,\n            \"(U)\": 33,\n            \"3<\": 33,\n            \"3>\": 33,\n            \"(e)\": 34,\n            \"(E)\": 34,\n            \"(o)\": 35,\n            \"(O)\": 35,\n            \"(k)\": 36,\n            \"(K)\": 36,\n            \"(m)\": 37,\n            \"(M)\": 37,\n            \"(c)\": 38,\n            \"(C)\": 38,\n            \"(g)\": 39,\n            \"(G)\": 39,\n            \"(sn)\": 40,\n            \":-*\": 41,\n            \"(f)\": 42,\n            \"(F)\": 42,\n            \"(w)\": 43,\n            \"(W)\": 43,\n            \"(ba)\": 44,\n            \"(pl)\": 45,\n            \"(p)\": 46,\n            \"(P)\": 46,\n            \"(ll)\": 47,\n            \"(~)\": 48,\n            \"(pi)\": 49,\n            \"(PI)\": 49,\n            \"(@)\": 50,\n            \"(so)\": 51,\n            \"(&)\": 52,\n            \"(au)\": 53,\n            \"(ap)\": 54,\n            \"(um)\": 55,\n            \"(ip)\": 56,\n            \"(8)\": 57,\n            \"(co)\": 58,\n            \"(mp)\": 59,\n            \"(st)\": 60,\n            \"(li)\": 61,\n            \"(mo)\": 62,\n            \"(b)\": 63,\n            \"(B)\": 63,\n        };\n\n        Object.keys(emoticons).map(function (objectKey, index) {\n            const value = emoticons[objectKey];\n\n            if (texto.slice(texto.length - 2, texto.length) === objectKey) {\n                setTexto(`${texto.slice(0, texto.length - 2)} <img src='${require(`../sendEmoticons/assets/${value}.png`).default}'></img>`);\n            } else if (texto.slice(texto.length - 3, texto.length) === objectKey) {\n                setTexto(`${texto.slice(0, texto.length - 3)} <img src='${require(`../sendEmoticons/assets/${value}.png`).default}'></img>`);\n            } else if (texto.slice(texto.length - 4, texto.length) === objectKey) {\n                setTexto(`${texto.slice(0, texto.length - 4)} <img src='${require(`../sendEmoticons/assets/${value}.png`).default}'></img>`);\n            }\n        });\n\n        // if (texto.slice(texto.length - 2, texto.length) === \":(\") setTexto(`${texto.slice(0, texto.length - 2)} <img src='${require(`../sendEmoticons/assets/1.png`).default}'></img>`);\n    };\n\n    const eastereggschat = ({ texto, setTexto }) => {\n        if (texto === \"modo pablo\") {\n            //meu easteregg\n            setTexto(`pablo é o best programador ever`);\n        }\n        if (texto === \"modo kyanne\") {\n            //easteregg para minha prima\n            setTexto(`<div style='display: flex; align-items: center; '><img style='width: 25px;' src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Avai_FC_%2805-E%29_-_SC.svg/1200px-Avai_FC_%2805-E%29_-_SC.svg.png\"/><p style='color: blue ; margin-left: 5px'> </p></div>`);\n        }\n        if (texto === \"modo bruno\") {\n            //easteregg para minha prima\n            setTexto(`<div style='display: flex; align-items: center; '><img style='width: 40px;' src=\"https://p2.trrsf.com/image/fget/cf/1200/1200/filters:quality(85)/images.terra.com/2014/09/04/maconha.jpg\"/><p style='color: green ; margin-left: 5px'> </p></div>`);\n        }\n    };\n\n    return [preventEmoticons, eastereggschat];\n};\n\nexport default Scripts;\n","/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/components/crop/index.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendWinks/components/winks/index.js",["306"],"import React, { useRef } from \"react\";\n\nimport { Container } from \"./styles\";\n\n//context\nimport { useUser } from \"../../../../../../../context/allusers\";\n\nlet isplaying;\n\nconst FancyWinks = React.forwardRef((props, ref) => {\n    const { language } = useUser();\n    const winks = [\"dancing_pig\", \"kiss\", \"bola\", \"bow\", \"cartao\", \"fartguy\", \"frog\", \"guitar_smash\", \"heartkey\", \"knock\", \"laughing_girl\", \"notes\", \"water_balloon\", \"yawning_moon\"];\n\n    const videoRef = useRef([]);\n    const buttonStop = useRef();\n    let size = 400;\n\n    const handlePlayVideo = (num) => {\n        if (videoRef.current[num]) {\n            videoRef.current[num].play();\n            videoRef.current[num].style = \"display: block;\";\n        }\n        if (buttonStop.current) buttonStop.current.style = \"display: block;\";\n\n        isplaying = setTimeout(() => {\n            if (videoRef.current[num]) videoRef.current[num].style = \"display: none;\";\n            if (buttonStop.current) buttonStop.current.style = \"display: none;\";\n        }, videoRef.current[num].duration * 1000);\n    };\n\n    const handleStopVideo = () => {\n        videoRef.current.forEach((elem, index) => {\n            if (videoRef.current) {\n                videoRef.current[index].style = \"display: none;\";\n                videoRef.current[index].pause();\n                videoRef.current[index].currentTime = 0;\n            }\n        });\n\n        if (buttonStop.current) buttonStop.current.style = \"display: none;\";\n        clearTimeout(isplaying);\n    };\n\n    return (\n        <Container>\n            {/* botões que so reproduzem */}\n\n            {winks.map((elem, index) => {\n                return <button key={elem} className=\"actions-buttons-play-winks\" id={`play-wink-${elem}-${props.socketidPerson}`} onClick={() => handlePlayVideo(index)} />;\n            })}\n            {/* fim dos botoes que so reproduzem */}\n\n            {/* winks */}\n            <button ref={buttonStop} id=\"stop-video-winks\" onClick={handleStopVideo}>\n                {language === \"br\" ? \"Parar\" : \"Stop\"}\n            </button>\n            {winks.map((elem, index) => {\n                return (\n                    <video key={elem} width={500} ref={(el) => (videoRef.current[index] = el)}>\n                        <source src={require(`./videos/${elem}.mp4`).default} type=\"video/mp4\" />\n                    </video>\n                );\n            })}\n        </Container>\n    );\n});\nexport default FancyWinks;\n","/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendWinks/index.js",["307"],"import React from \"react\";\n\nimport { Container } from \"./styles\";\n\n//socket\nimport { socket } from \"../../../../../../configs/socket_export\";\n\nconst SendWinks = (props) => {\n    const winks = [\"dancing_pig\", \"kiss\", \"bola\", \"bow\", \"cartao\", \"fartguy\", \"frog\", \"guitar_smash\", \"heartkey\", \"knock\", \"laughing_girl\", \"notes\", \"water_balloon\", \"yawning_moon\"];\n\n    const handleSendWink = (wink) => {\n        socket.emit(\"send wink\", { socketidPerson: props.socketidPerson, wink });\n    };\n\n    const images = winks.map((elem) => {\n        return (\n            <button key={elem}>\n                <img src={require(`./assets/${elem}.png`).default} alt=\"image-pig\" onClick={() => handleSendWink(elem)} />\n            </button>\n        );\n    });\n\n    return (\n        <>\n            <Container visible={props.visible}>{images}</Container>\n        </>\n    );\n};\n\nexport default SendWinks;\n","/home/home/Workspace/msn-js/frontend/src/pages/home/components/sidebar/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/home/components/contacts/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendEmoticons/index.js",["308"],"import React from \"react\";\n\nimport { Container } from \"./styles\";\n\nconst SendWinks = React.forwardRef(({ visible, setTexto, texto }, ref) => {\n    const emoticonslist = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\", \"38\", \"39\", \"40\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"50\", \"51\", \"52\", \"53\", \"54\", \"55\", \"56\", \"57\", \"58\", \"59\", \"60\", \"61\", \"62\", \"63\"];\n\n    const handleSendWink = (num) => {\n        setTexto(`${texto}<img src=${require(`./assets/${num}.png`).default}></img>`);\n    };\n\n    const emoticons = emoticonslist.map((elem) => {\n        return (\n            <button key={elem}>\n                <img src={require(`./assets/${elem}.png`).default} alt=\"image-pig\" onClick={() => handleSendWink(elem)} />\n            </button>\n        );\n    });\n\n    return (\n        <>\n            <Container visible={visible} ref={ref}>\n                {emoticons}\n            </Container>\n        </>\n    );\n});\n\nexport default SendWinks;\n","/home/home/Workspace/msn-js/frontend/src/pages/home/components/contacts/components/contact/index.js",["309","310","311","312"],"import React from \"react\";\n//configs\nimport { socket } from \"../../../../../../configs/socket_export\";\n//components\nimport AeroButton from \"../../../../../components/aeroButton/index\";\n//context\nimport { useUser } from \"../../../../../context/allusers\";\nimport away from \"./assets/away.png\";\nimport busy from \"./assets/busy.png\";\nimport invisible from \"./assets/invisible.png\";\nimport listen from \"./assets/listen-music.png\";\n//images\nimport online from \"./assets/online.png\";\nimport { Container } from \"./styles\";\n\nconst Contact = (props) => {\n    const { chatRefText, language } = useUser();\n\n    let status;\n    switch (props.status) {\n        case \"online\":\n            status = online;\n            break;\n        case \"busy\":\n            status = busy;\n            break;\n        case \"away\":\n            status = away;\n            break;\n        case \"invisible\":\n            status = invisible;\n            break;\n        default:\n    }\n\n    const handleCustomClick = (socketidperson) => {\n        socket.emit(\"click on chat\", socketidperson);\n\n        if (chatRefText) {\n            const indexPersonChat = chatRefText.current.findIndex((elem) => {\n                if (!elem) return false;\n                if (elem.id === socketidperson) return socketidperson;\n            });\n        }\n    };\n\n    return (\n        <Container>\n            <AeroButton id=\"button\" onCustomClick={(e) => handleCustomClick(props.socketid)} disabled={props.disabled}>\n                <img src={status} alt=\"\" />\n                {props.disabled === true && <p>{language === \"br\" ? \"(você)\" : \"(You)\"}</p>}\n                {props.username && <p id=\"contact-username\">{props.username}</p>}\n                {props.music.name ? (\n                    props.music.name ? (\n                        <>\n                            <a style={{ marginLeft: 5 }}>-</a>\n                            <img src={listen} alt=\"\" style={{ marginLeft: 5, width: 15, marginTop: 2 }} />\n                            <a id=\"contact-music\" href={props.music.url} target=\"_blank\">\n                                {props.music.name} ({props.music.author})\n                            </a>\n                        </>\n                    ) : (\n                        <p id=\"contact-subnick\"></p>\n                    )\n                ) : props.subnick ? (\n                    <p id=\"contact-subnick\">- {props.subnick}</p>\n                ) : (\n                    <p id=\"contact-subnick\"></p>\n                )}\n            </AeroButton>\n        </Container>\n    );\n};\n\nexport default Contact;\n","/home/home/Workspace/msn-js/frontend/src/pages/components/aeroButton/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/audioRecorder/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/audioRecorder/useRecorder.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/components/crop/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendWinks/components/winks/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/components/photoHistory/index.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendWinks/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/chat/components/chat/components/sendEmoticons/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/home/components/contacts/components/contact/styles.js",[],"/home/home/Workspace/msn-js/frontend/src/pages/components/modalCropUpdate/components/photoHistory/styles.js",[],["313","314"],{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","severity":1,"message":"320","line":40,"column":8,"nodeType":"321","endLine":40,"endColumn":10,"suggestions":"322"},{"ruleId":"319","severity":1,"message":"323","line":16,"column":5,"nodeType":"324","endLine":16,"endColumn":14,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":1,"column":8,"nodeType":"324","messageId":"328","endLine":1,"endColumn":13},{"ruleId":"326","severity":1,"message":"329","line":1,"column":17,"nodeType":"324","messageId":"328","endLine":1,"endColumn":23},{"ruleId":"330","severity":1,"message":"331","line":17,"column":70,"nodeType":"332","messageId":"333","endLine":17,"endColumn":72},{"ruleId":"330","severity":1,"message":"331","line":23,"column":68,"nodeType":"332","messageId":"333","endLine":23,"endColumn":70},{"ruleId":"330","severity":1,"message":"331","line":60,"column":70,"nodeType":"332","messageId":"333","endLine":60,"endColumn":72},{"ruleId":"330","severity":1,"message":"331","line":64,"column":68,"nodeType":"332","messageId":"333","endLine":64,"endColumn":70},{"ruleId":"330","severity":1,"message":"331","line":79,"column":68,"nodeType":"332","messageId":"333","endLine":79,"endColumn":70},{"ruleId":"319","severity":1,"message":"334","line":45,"column":8,"nodeType":"321","endLine":45,"endColumn":63,"suggestions":"335"},{"ruleId":"319","severity":1,"message":"336","line":45,"column":9,"nodeType":"337","endLine":45,"endColumn":40},{"ruleId":"319","severity":1,"message":"336","line":45,"column":42,"nodeType":"337","endLine":45,"endColumn":62},{"ruleId":"326","severity":1,"message":"338","line":12,"column":7,"nodeType":"324","messageId":"328","endLine":12,"endColumn":16},{"ruleId":"339","severity":1,"message":"340","line":18,"column":23,"nodeType":"341","messageId":"342","endLine":18,"endColumn":25},{"ruleId":"319","severity":1,"message":"343","line":26,"column":8,"nodeType":"321","endLine":26,"endColumn":10,"suggestions":"344"},{"ruleId":"319","severity":1,"message":"345","line":138,"column":8,"nodeType":"324","endLine":138,"endColumn":14},{"ruleId":"319","severity":1,"message":"346","line":138,"column":8,"nodeType":"324","endLine":138,"endColumn":14,"suggestions":"347"},{"ruleId":"348","severity":1,"message":"349","line":150,"column":21,"nodeType":"350","endLine":150,"endColumn":103},{"ruleId":"348","severity":1,"message":"349","line":151,"column":21,"nodeType":"350","endLine":151,"endColumn":100},{"ruleId":"351","severity":1,"message":"352","line":71,"column":13,"nodeType":"353","messageId":"342","endLine":71,"endColumn":17},{"ruleId":"354","severity":1,"message":"355","line":72,"column":41,"nodeType":"341","messageId":"356","endLine":72,"endColumn":42},{"ruleId":"357","severity":1,"message":"358","line":6,"column":1,"nodeType":"359","endLine":21,"endColumn":3},{"ruleId":"360","severity":1,"message":"361","line":8,"column":5,"nodeType":"362","messageId":"363","endLine":18,"endColumn":6},{"ruleId":"357","severity":1,"message":"358","line":3,"column":1,"nodeType":"359","endLine":64,"endColumn":3},{"ruleId":"326","severity":1,"message":"364","line":3,"column":10,"nodeType":"324","messageId":"328","endLine":3,"endColumn":27},{"ruleId":"326","severity":1,"message":"365","line":4,"column":10,"nodeType":"324","messageId":"328","endLine":4,"endColumn":19},{"ruleId":"326","severity":1,"message":"366","line":5,"column":10,"nodeType":"324","messageId":"328","endLine":5,"endColumn":16},{"ruleId":"326","severity":1,"message":"367","line":17,"column":8,"nodeType":"324","messageId":"328","endLine":17,"endColumn":14},{"ruleId":"326","severity":1,"message":"368","line":21,"column":8,"nodeType":"324","messageId":"328","endLine":21,"endColumn":14},{"ruleId":"326","severity":1,"message":"369","line":27,"column":8,"nodeType":"324","messageId":"328","endLine":27,"endColumn":11},{"ruleId":"326","severity":1,"message":"370","line":33,"column":52,"nodeType":"324","messageId":"328","endLine":33,"endColumn":66},{"ruleId":"326","severity":1,"message":"371","line":48,"column":11,"nodeType":"324","messageId":"328","endLine":48,"endColumn":17},{"ruleId":"326","severity":1,"message":"372","line":80,"column":11,"nodeType":"324","messageId":"328","endLine":80,"endColumn":22},{"ruleId":"326","severity":1,"message":"373","line":29,"column":20,"nodeType":"324","messageId":"328","endLine":29,"endColumn":29},{"ruleId":"319","severity":1,"message":"374","line":45,"column":8,"nodeType":"321","endLine":45,"endColumn":45,"suggestions":"375"},{"ruleId":"376","severity":1,"message":"377","line":46,"column":78,"nodeType":"378","endLine":46,"endColumn":93},{"ruleId":"376","severity":1,"message":"377","line":17,"column":59,"nodeType":"378","endLine":17,"endColumn":74},{"ruleId":"376","severity":1,"message":"377","line":22,"column":64,"nodeType":"378","endLine":22,"endColumn":79},{"ruleId":"376","severity":1,"message":"377","line":27,"column":62,"nodeType":"378","endLine":27,"endColumn":77},{"ruleId":"330","severity":1,"message":"379","line":36,"column":55,"nodeType":"332","messageId":"333","endLine":36,"endColumn":57},{"ruleId":"326","severity":1,"message":"380","line":14,"column":20,"nodeType":"324","messageId":"328","endLine":14,"endColumn":31},{"ruleId":"326","severity":1,"message":"327","line":1,"column":8,"nodeType":"324","messageId":"328","endLine":1,"endColumn":13},{"ruleId":"326","severity":1,"message":"329","line":1,"column":17,"nodeType":"324","messageId":"328","endLine":1,"endColumn":23},{"ruleId":"330","severity":1,"message":"381","line":109,"column":36,"nodeType":"382","messageId":"383","endLine":109,"endColumn":45},{"ruleId":"326","severity":1,"message":"384","line":16,"column":9,"nodeType":"324","messageId":"328","endLine":16,"endColumn":13},{"ruleId":"385","severity":1,"message":"386","line":18,"column":17,"nodeType":"350","endLine":18,"endColumn":123},{"ruleId":"385","severity":1,"message":"386","line":15,"column":17,"nodeType":"350","endLine":15,"endColumn":123},{"ruleId":"326","severity":1,"message":"387","line":40,"column":19,"nodeType":"324","messageId":"328","endLine":40,"endColumn":34},{"ruleId":"330","severity":1,"message":"331","line":40,"column":74,"nodeType":"332","messageId":"333","endLine":40,"endColumn":76},{"ruleId":"388","severity":1,"message":"389","line":56,"column":29,"nodeType":"350","endLine":56,"endColumn":58},{"ruleId":"376","severity":1,"message":"377","line":58,"column":74,"nodeType":"378","endLine":58,"endColumn":89},{"ruleId":"315","replacedBy":"390"},{"ruleId":"317","replacedBy":"391"},"no-native-reassign",["392"],"no-negated-in-lhs",["393"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SendWink', 'chatRef', 'chatRefText', 'drawAttention', 'multiChatRef', 'sendAudio', and 'sendMessage'. Either include them or remove the dependency array.","ArrayExpression",["394"],"React Hook useEffect contains a call to 'setContact'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getPerson, props.socketidperson, contact] as a second argument to the useEffect Hook.","Identifier",["395"],"no-unused-vars","'React' is defined but never used.","unusedVar","'useRef' is defined but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'getPerson', 'person', 'props.chatRefText', and 'props.socketidperson'. Either include them or remove the dependency array. If 'setPerson' needs the current value of 'props.socketidperson', you can also switch to useReducer instead of useState and read 'props.socketidperson' in the reducer.",["396"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'preventf5' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'preventf5'. Either include it or remove the dependency array.",["397"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'changeLanguage' and 'person'. Either include them or remove the dependency array.",["398"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'info'.","ObjectExpression","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'BsMusicNoteBeamed' is defined but never used.","'FaSpotify' is defined but never used.","'ImExit' is defined but never used.","'NavBar' is defined but never used.","'brasil' is defined but never used.","'usa' is defined but never used.","'changeLanguage' is assigned a value but never used.","'logout' is assigned a value but never used.","'menuSubnick' is assigned a value but never used.","'setRecord' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'eastereggschat' and 'preventEmoticons'. Either include them or remove the dependency array.",["399"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","Array.prototype.map() expects a value to be returned at the end of arrow function.","'isRecording' is assigned a value but never used.","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'size' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'indexPersonChat' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["392"],["393"],"no-global-assign","no-unsafe-negation",{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},"Update the dependencies array to be: [SendWink, chatRef, chatRefText, drawAttention, multiChatRef, sendAudio, sendMessage]",{"range":"412","text":"413"},"Add dependencies array: [getPerson, props.socketidperson, contact]",{"range":"414","text":"415"},"Update the dependencies array to be: [getPerson, person, props.chatRefText, props.socketidperson]",{"range":"416","text":"417"},"Update the dependencies array to be: [preventf5]",{"range":"418","text":"419"},"Update the dependencies array to be: [changeLanguage, person]",{"range":"420","text":"421"},"Update the dependencies array to be: [eastereggschat, preventEmoticons, refContentEditable.current.lastHtml]",{"range":"422","text":"423"},[1741,1743],"[SendWink, chatRef, chatRefText, drawAttention, multiChatRef, sendAudio, sendMessage]",[640,640],", [getPerson, props.socketidperson, contact]",[1585,1640],"[getPerson, person, props.chatRefText, props.socketidperson]",[828,830],"[preventf5]",[5185,5191],"[changeLanguage, person]",[1964,2001],"[eastereggschat, preventEmoticons, refContentEditable.current.lastHtml]"]